import re
import requests
import time
import os
from urllib.parse import urljoin

# –ù–ê–°–¢–†–û–ô–ö–ò
MAIN_PLAYLIST = "EdemTV-main.m3u"
KEYS_FILE = "keys.txt"
MIN_TOTAL_BYTES = 2000 * 1024  # 2000 KB
TEST_TIME = 10  # —Å–µ–∫—É–Ω–¥

def get_m3u8_total_bytes(url, test_time=TEST_TIME):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö M3U8 –ø–æ—Ç–æ–∫–∞"""
    print("  üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–æ–∫–∞...")
    
    try:
        playlist_response = requests.get(url, timeout=10)
        if playlist_response.status_code != 200:
            print("  ‚ùå –ü–ª–µ–π–ª–∏—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return 0, 0
        
        playlist_content = playlist_response.text
        ts_urls = re.findall(r'^[^#\n].*\.ts.*$', playlist_content, re.MULTILINE)
        
        if not ts_urls:
            sub_playlist_urls = re.findall(r'^[^#\n].*\.m3u8.*$', playlist_content, re.MULTILINE)
            if sub_playlist_urls:
                sub_url = urljoin(url, sub_playlist_urls[0])
                try:
                    sub_response = requests.get(sub_url, timeout=10)
                    if sub_response.status_code == 200:
                        sub_content = sub_response.text
                        ts_urls = re.findall(r'^[^#\n].*\.ts.*$', sub_content, re.MULTILINE)
                except:
                    pass
        
        if not ts_urls:
            print("  ‚ùå –ù–µ—Ç —Å–µ–≥–º–µ–Ω—Ç–æ–≤")
            return 0, 0
        
        total_bytes = 0
        start_check_time = time.time()
        segments_checked = 0
        max_segments = min(6, len(ts_urls))
        
        for i in range(max_segments):
            if time.time() - start_check_time > test_time:
                break
            if segments_checked >= 6:
                break
                
            ts_url = urljoin(url, ts_urls[i])
            
            try:
                seg_response = requests.get(ts_url, timeout=10)
                if seg_response.status_code == 200:
                    total_bytes += len(seg_response.content)
                    segments_checked += 1
                elif seg_response.status_code in [403, 404]:
                    break
            except:
                continue
        
        total_time = time.time() - start_check_time
        print("  üìä " + str(total_bytes//1024) + " KB –∑–∞ " + f"{total_time:.1f}" + " —Å–µ–∫")
        
        return total_bytes, total_time
        
    except Exception as e:
        print("  ‚ùå –û—à–∏–±–∫–∞")
        return 0, 0

def is_stream_good(url, min_bytes=MIN_TOTAL_BYTES):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—Ç–æ–∫ –ø–æ –æ–±—ä–µ–º—É –¥–∞–Ω–Ω—ã—Ö"""
    total_bytes, total_time = get_m3u8_total_bytes(url, TEST_TIME)
    return total_bytes >= min_bytes

def replace_key_in_url(url, new_key):
    """–ó–∞–º–µ–Ω—è–µ—Ç –∫–ª—é—á –≤ URL"""
    pattern = r'(http://[^/]+/iptv/)([^/]+)(/6238/index\.m3u8)'
    return re.sub(pattern, r'\g<1>' + new_key + r'\g<3>', url)

def extract_key_from_playlist(playlist_file):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
    try:
        with open(playlist_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º URL —Å –∫–ª—é—á–æ–º –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ
        match = re.search(r'http://[^/]+/iptv/([^/]+)/6238/index\.m3u8', content)
        if match:
            key = match.group(1)
            print("  ‚úÖ –ù–∞–π–¥–µ–Ω –∫–ª—é—á –≤ " + playlist_file + ": " + key[:20] + "...")
            return key
        else:
            print("  ‚ùå –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ " + playlist_file)
            return None
    except Exception as e:
        print("  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è " + playlist_file + ": " + str(e))
        return None

def load_keys_from_file(filename):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–ª—é—á–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            keys = [line.strip() for line in f if line.strip()]
        print("  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ " + str(len(keys)) + " –∫–ª—é—á–µ–π")
        return keys
    except Exception as e:
        print("  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª—é—á–µ–π: " + str(e))
        return []

def copy_playlist(source, destination):
    """–ö–æ–ø–∏—Ä—É–µ—Ç –ø–ª–µ–π–ª–∏—Å—Ç"""
    try:
        with open(source, 'r', encoding='utf-8') as src:
            with open(destination, 'w', encoding='utf-8') as dst:
                dst.write(src.read())
        print("  ‚úÖ " + source + " ‚Üí " + destination)
        return True
    except Exception as e:
        print("  ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: " + str(e))
        return False

def find_reserve_file_by_key(key, keys_list):
    """–ù–∞—Ö–æ–¥–∏—Ç –Ω–æ–º–µ—Ä —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ –∫–ª—é—á—É"""
    try:
        index = keys_list.index(key)
        return index + 1
    except ValueError:
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
    print("üì∫ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ü–õ–ï–ô–õ–ò–°–¢–û–í")
    print("=" * 50)
    print("–û—Å–Ω–æ–≤–Ω–æ–π –ø–ª–µ–π–ª–∏—Å—Ç: " + MAIN_PLAYLIST)
    print("–ö–ª—é—á–∏: " + KEYS_FILE)
    print("–ú–∏–Ω–∏–º—É–º: " + str(MIN_TOTAL_BYTES//1024) + " KB")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists(KEYS_FILE):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∫–ª—é—á–µ–π: " + KEYS_FILE)
        return False
    
    if not os.path.exists(MAIN_PLAYLIST):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–µ–π–ª–∏—Å—Ç: " + MAIN_PLAYLIST)
        return False
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–∏
    print("üîç –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª—é—á–µ–π...")
    keys = load_keys_from_file(KEYS_FILE)
    if not keys:
        print("‚ùå –ù–µ—Ç –∫–ª—é—á–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        return False
    
    print()
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–µ–π–ª–∏—Å—Ç
    print("üîç –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–û–ì–û –ü–õ–ï–ô–õ–ò–°–¢–ê:")
    main_key = extract_key_from_playlist(MAIN_PLAYLIST)
    
    if main_key:
        main_url = replace_key_in_url("http://jexywacp.tvclub.xyz/iptv/KEY/6238/index.m3u8", main_key)
        print("  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞: " + main_key[:20] + "...")
        main_key_good = is_stream_good(main_url, MIN_TOTAL_BYTES)
        print("  " + ("‚úÖ –•–û–†–û–®–ò–ô" if main_key_good else "‚ùå –ü–õ–û–•–û–ô"))
        print()
        
        if main_key_good:
            print("‚úÖ –û–°–ù–û–í–ù–û–ô –ü–õ–ï–ô–õ–ò–°–¢ –†–ê–ë–û–¢–ê–ï–¢")
            print("üí° –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–º–µ–Ω–µ")
            print()
            print("=" * 50)
            print("üéâ –ì–û–¢–û–í–û! –û—Å–Ω–æ–≤–Ω–æ–π –ø–ª–µ–π–ª–∏—Å—Ç –≤ –ø–æ—Ä—è–¥–∫–µ")
            print("=" * 50)
            return True
        else:
            print("‚ùå –û–°–ù–û–í–ù–û–ô –ü–õ–ï–ô–õ–ò–°–¢ –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
            print("üîç –ü–æ–∏—Å–∫ —Ä–∞–±–æ—á–µ–≥–æ –∫–ª—é—á–∞...")
            print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É –∏–∑ —Ñ–∞–π–ª–∞
    working_key_index = -1
    
    for i, key in enumerate(keys):
        print("üîç –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ê " + str(i+1) + " (" + key[:15] + "...):")
        test_url = replace_key_in_url("http://jexywacp.tvclub.xyz/iptv/KEY/6238/index.m3u8", key)
        is_good = is_stream_good(test_url, MIN_TOTAL_BYTES)
        print("  " + ("‚úÖ –•–û–†–û–®–ò–ô" if is_good else "‚ùå –ü–õ–û–•–û–ô"))
        print()
        
        if is_good:
            working_key_index = i
            break
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –ø–ª–µ–π–ª–∏—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    if working_key_index >= 0:
        reserve_number = working_key_index + 1
        reserve_filename = "EdemTV-reserve" + str(reserve_number) + ".m3u"
        
        print("‚úÖ –ù–ê–ô–î–ï–ù –†–ê–ë–û–ß–ò–ô –ö–õ–Æ–ß: " + str(working_key_index + 1))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        if os.path.exists(reserve_filename):
            print("üîÑ –ö–æ–ø–∏—Ä—É–µ–º " + reserve_filename + " ‚Üí " + MAIN_PLAYLIST + "...")
            success = copy_playlist(reserve_filename, MAIN_PLAYLIST)
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª: " + reserve_filename)
            print("‚ö†Ô∏è  –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è –∫–ª—é—á–∞ " + str(working_key_index + 1))
            success = False
    else:
        print("‚ùå –í–°–ï –ö–õ–Æ–ß–ò –ù–ï –†–ê–ë–û–¢–ê–Æ–¢")
        print("‚ö†Ô∏è  –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç")
        success = False
    
    print()
    print("=" * 50)
    if success:
        print("üéâ –ì–û–¢–û–í–û! " + MAIN_PLAYLIST + " –æ–±–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –û–®–ò–ë–ö–ê –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    print("=" * 50)
    
    return success

if __name__ == "__main__":
    try:
        success = main()
    except Exception as e:
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " + str(e))
        success = False
    
if os.environ.get('GITHUB_ACTIONS'):
    print("ü§ñ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –≤ GitHub Actions")
else:
    try:
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    except EOFError:
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ")