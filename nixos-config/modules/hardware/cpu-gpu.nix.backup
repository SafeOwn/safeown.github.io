{
  config, lib,
  pkgs,
  ...
}:

let
  pkgs32 = import <nixpkgs> { system = "i686-linux"; };
in
{
  # ==============================================================
  # üîê –†–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–æ–ø—Ä–∏–µ—Ç–∞—Ä–Ω—ã–µ –∏ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
  # ==============================================================
  # –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è NVIDIA –∏ qtwebengine
  nixpkgs.config.allowUnfree = true;
  nixpkgs.config.permittedInsecurePackages = [
    "qtwebengine-5.15.19"   # ‚úÖ –†–∞–∑—Ä–µ—à–∞–µ–º –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ
  ];

  # ==============================================================
  # üì¶ NVIDIA –î–†–ê–ô–í–ï–† (open-source)
  # ==============================================================
  hardware.nvidia = {
    open = false;  # –û—Ç–∫–ª—é—á–∞–µ–º open-–¥—Ä–∞–π–≤–µ—Ä
    package = config.boot.kernelPackages.nvidiaPackages.beta; # –∏–ª–∏ beta –∏–ª–∏ latest # –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–ø—Ä–∏–µ—Ç–∞—Ä–Ω—ã–π
    nvidiaSettings = true;
    # –†–µ–∂–∏–º—ã
    modesetting.enable = true;
    powerManagement.enable = true;   # ‚úÖ –ö–†–ò–¢–ò–ß–ù–û
    powerManagement.finegrained = false;
  };

  # --- –†–ï–ñ–ò–ú: NVIDIA (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) ---
  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NVIDIA
  boot.blacklistedKernelModules = [ "i915" "int3515" ];

  # --- –†–ï–ñ–ò–ú: INTEL ---
  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Intel (–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –±–ª–æ–∫ –≤—ã—à–µ –†–ï–ñ–ò–ú: NVIDIA) –ø–æ–¥–∫–ª—é—á–∏ HDMI –∫ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–π –ø–ª–∞—Ç–µ
  # boot.blacklistedKernelModules = [   # —Å–¥–µ–ª–∞–π nixos-rebuild switch
  #   "nvidia"
  #   "nouveau"
  #   "nvidia-uvm"
  #   "nvidia-drm"
  #   "nvidia-modeset"
  # ];

  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —è–¥—Ä–∞
  boot.kernelParams = lib.mkAfter [
#    "drm.edid_firmware=DP-2:${./dp-edid.bin}"   # –∫–æ–ø–∏—Ä—É–µ—Ç –≤ initrc –º–æ–Ω–∏—Ç–æ—Ä
    "drm.edid_firmware=DP-2:edid/dp-edid.bin"
    "video=DP-2:3840x2160@160"
    #"drm.edid_firmware=edid/dp-edid.bin"
    "nvidia.NVreg_PreserveVideoMemoryAllocations=1"
    # –°–∫—Ä—ã—Ç—å —è–¥—Ä–æ –≤–æ–º–º–∞–Ω–¥—ã –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
    "quiet"
    "splash"
    "loglevel=3"        # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ (–Ω–µ info/debug)
    "vt.global_cursor_default=0"  # –°–∫—Ä—ã—Ç—å –º–∏–≥–∞—é—â–∏–π –∫—É—Ä—Å–æ—Ä

    "snd-intel-dspcfg.dsp_driver=1"  # –£—Å–∫–æ—Ä–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    "i915.fastboot=1" # (–¥–∞—Ç—á–∏–∫ –æ—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã) –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å I2C-–∫–ª–∏–µ–Ω—Ç
  ];

  # –ö–ª–∞–¥—ë–º EDID –≤ firmware
  hardware.firmware = [
    (pkgs.runCommand "dp-edid.bin" { } ''
      mkdir -p $out/lib/firmware/edid
      cp ${./dp-edid.bin} $out/lib/firmware/edid/dp-edid.bin
    '')
  ];

  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª–µ–π # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å—é VRAM
  boot.extraModprobeConfig = ''
    options nvidia_modeset vblank_sem_control=0
    options nvidia NVreg_TemporaryFilePath=/var/tmp


    options nvidia NVreg_InteractivePowerManagement=1
    options nvidia NVreg_EnableGpuFirmware=1
    options nvidia NvKmsForceCompositionPipeline=1    # –±–µ–∑ –Ω–µ–≥–æ NVIDIA –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç max bpc, HDR
  '';

  services.xserver.displayManager.sessionCommands = ''  # –ê—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è HDR —Ü–≤–µ—Ç–æ–≤
    nvidia-settings --load-config-only &
    xrandr --output DP-2 --set "Broadcast RGB" "Full" &

    if [ "$XDG_SESSION_TYPE" = "x11" ] || [ "$XDG_SESSION_TYPE" = "wayland" ]; then
      (/etc/nixos/scripts/nvidia-tray.py &) &
    fi
  '';


  # ==============================================================
  # üñºÔ∏è –ú–û–ù–ò–¢–û–† –ò EDID (DisplayPort)
  # ==============================================================

  # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è NVIDIA (–≤–∞–∂–Ω–æ –¥–ª—è Wayland –∏ Vulkan)
  environment.sessionVariables = {
    __GLX_VENDOR_LIBRARY_NAME = "nvidia"; # –§–æ—Ä—Å–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞ NVIDIA (–Ω–µ nouveau)
    __VK_LAYER_NV_optimus = "NVIDIA_only"; # –í–∫–ª—é—á–∞–µ—Ç Vulkan –Ω–∞ dGPU (–≤–∞–∂–Ω–æ –¥–ª—è –∏–≥—Ä)
     WLR_NO_HARDWARE_CURSORS = "1";  # –£–±–∏—Ä–∞–µ—Ç "–¥—Ä–æ–∂–∞–Ω–∏–µ" –∏ —à–ª–µ–π—Ñ—ã –æ—Ç –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–æ—Ä–∞
    __GL_YIELD = "USLEEP";  # –£–º–µ–Ω—å—à–∞–µ—Ç "–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ—Å—Ç—å" –¥—Ä–∞–π–≤–µ—Ä–∞ NVIDIA, –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –±—É—Ñ–µ—Ä–æ–≤
  };


  # –î–ª—è Intel, AMD, NVIDIA (open-source) ‚Äî mesa
  environment.systemPackages = with pkgs; [
    # 32-–±–∏—Ç–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∞
    (pkgsi686Linux.freetype)
    (pkgsi686Linux.fontconfig)
    (pkgsi686Linux.corefonts)
    (pkgsi686Linux.liberation_ttf)
    (pkgsi686Linux.font-awesome)
    (pkgsi686Linux.glib)
    (pkgsi686Linux.glibc)
    (pkgsi686Linux.stdenv.cc.cc.lib)

    libpulseaudio
    alsa-lib
    dbus
    xorg.libX11
    xorg.libXext
    xorg.libXcursor
    xorg.libXi
    xorg.libXinerama
    xorg.libXScrnSaver
    xorg.libXtst
    xorg.xkbcomp
    xorg.setxkbmap
    libappindicator-gtk3

    freetype
    stdenv.cc.cc.lib

    libpng
    libpulseaudio
    libvorbis
    libkrb5
    keyutils

    yad
    imagemagick

    # 64-–±–∏—Ç–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
    vulkan-loader
    pkgsi686Linux.vulkan-loader

    libdecor
    egl-wayland
    xwayland
    libglvnd
    libxkbcommon
    xorg.libxshmfence




    vkd3d
    gst_all_1."gst-plugins-base"
    gst_all_1."gst-plugins-good"
    gst_all_1."gst-plugins-bad"
    gst_all_1."gst-plugins-ugly"
    mangohud
    vkbasalt



    # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    glxinfo
    mesa_glu
  ];

}
